>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

# Test de base pour la division d'une matrice par un entier
>>> matrix = [[4, 8], [12, 16]]
>>> matrix_divided(matrix, 2)
[[2.0, 4.0], [6.0, 8.0]]

# Test pour la division d'une matrice par un flottant
>>> matrix_divided(matrix, 2.5)
[[1.6, 3.2], [4.8, 6.4]]

# Test pour la division par zéro (doit lever ZeroDivisionError)
>>> matrix_divided(matrix, 0)
Traceback (most recent call last):
    ...
ZeroDivisionError: division by zero

# Test avec une matrice dont les lignes ont des tailles différentes (doit lever TypeError)
>>> matrix = [[1, 2, 3], [4, 5]]
>>> matrix_divided(matrix, 2)
Traceback (most recent call last):
    ...
TypeError: Each row of the matrix must have the same size

# Test avec des éléments non numériques dans la matrice (doit lever TypeError)
>>> matrix = [["Holberton", 2], [3, 4]]
>>> matrix_divided(matrix, 2)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

# Test avec 'div' non numérique (doit lever TypeError)
>>> matrix = [[1, 2], [3, 4]]
>>> matrix_divided(matrix, "Holberton")
Traceback (most recent call last):
    ...
TypeError: div must be a number
